{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "functionName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasUsed",
          "type": "uint256"
        }
      ],
      "name": "GasUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGasOptimization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "119:981:31:-:0;;;1572:26:0;;;1594:4;-1:-1:-1;;1572:26:0;;;;;;;;3126:44:3;;;;;;;;;;;119:981:31;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ce5760003560e01c806366d9a9a01161008c578063b5508aa911610066578063b5508aa91461015a578063ba414fa614610162578063e20c9f711461017a578063fa7626d41461018257600080fd5b806366d9a9a01461012857806385226c811461013d578063916a17c61461015257600080fd5b8062c74a65146100d35780630a9254e4146100dd5780631ed7831c146100e55780632ade3880146101035780633e5e3c23146101185780633f7286f414610120575b600080fd5b6100db61018f565b005b6100db610371565b6100ed6103bc565b6040516100fa9190610b26565b60405180910390f35b61010b61041e565b6040516100fa9190610b97565b6100ed610560565b6100ed6105c0565b610130610620565b6040516100fa9190610c72565b610145610706565b6040516100fa9190610d25565b6101306107d6565b6101456108bc565b61016a61098c565b60405190151581526020016100fa565b6100ed610ab9565b60075461016a9060ff1681565b60008060195a601c54604051634f029c2b60e11b8152600481018490529194506001600160a01b031690639e05385690602401600060405180830381865afa1580156101df573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102079190810190610da8565b505a915060006102178385610e55565b90507f443ab68a4cacb08d38c92183e87a41d7056d4e3f5587d896f025fb5026afc0968160405161026f91906040808252600a90820152696261644e657374696e6760b01b6060820152602081019190915260800190565b60405180910390a15a601c5460405163c0ca164f60e01b8152600481018590529195506001600160a01b03169063c0ca164f90602401600060405180830381865afa1580156102c2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102ea9190810190610da8565b505a925060006102fa8486610e55565b90507f443ab68a4cacb08d38c92183e87a41d7056d4e3f5587d896f025fb5026afc0968160405161035391906040808252600b908201526a676f6f644e657374696e6760a81b6060820152602081019190915260800190565b60405180910390a181811061036a5761036a610e7c565b5050505050565b60405161037d90610b19565b604051809103906000f080158015610399573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055565b6060601480548060200260200160405190810160405280929190818152602001828054801561041457602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116103f6575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101561055757600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156105405783829060005260206000200180546104b390610e92565b80601f01602080910402602001604051908101604052809291908181526020018280546104df90610e92565b801561052c5780601f106105015761010080835404028352916020019161052c565b820191906000526020600020905b81548152906001019060200180831161050f57829003601f168201915b505050505081526020019060010190610494565b505050508152505081526020019060010190610442565b50505050905090565b60606016805480602002602001604051908101604052809291908181526020018280548015610414576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f6575050505050905090565b60606015805480602002602001604051908101604052809291908181526020018280548015610414576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f6575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156105575760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156106ee57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106b05790505b50505050508152505081526020019060010190610644565b60606018805480602002602001604051908101604052809291908181526020016000905b8282101561055757838290600052602060002001805461074990610e92565b80601f016020809104026020016040519081016040528092919081815260200182805461077590610e92565b80156107c25780601f10610797576101008083540402835291602001916107c2565b820191906000526020600020905b8154815290600101906020018083116107a557829003601f168201915b50505050508152602001906001019061072a565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156105575760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156108a457602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116108665790505b505050505081525050815260200190600101906107fa565b60606017805480602002602001604051908101604052809291908181526020016000905b828210156105575783829060005260206000200180546108ff90610e92565b80601f016020809104026020016040519081016040528092919081815260200182805461092b90610e92565b80156109785780601f1061094d57610100808354040283529160200191610978565b820191906000526020600020905b81548152906001019060200180831161095b57829003601f168201915b5050505050815260200190600101906108e0565b600754600090610100900460ff16156109ae5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610ab45760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610a3c917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610ecc565b60408051601f1981840301815290829052610a5691610efd565b6000604051808303816000865af19150503d8060008114610a93576040519150601f19603f3d011682016040523d82523d6000602084013e610a98565b606091505b5091505080806020019051810190610ab09190610f19565b9150505b919050565b60606013805480602002602001604051908101604052809291908181526020018280548015610414576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116103f6575050505050905090565b61019d80610f4383390190565b6020808252825182820181905260009190848201906040850190845b81811015610b675783516001600160a01b031683529284019291840191600101610b42565b50909695505050505050565b60005b83811015610b8e578181015183820152602001610b76565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610c6557603f19888603018452815180516001600160a01b0316865286015160408787018190528151908701819052908701906060600582901b88018101919088019060005b81811015610c4e57898403605f1901835284518051808652610c2f818e88018f8501610b73565b958c0195601f01601f1916949094018b019350918a0191600101610c08565b509197505050938601935090850190600101610bbe565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610d1657898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610d015783516001600160e01b0319168252928b019260019290920191908b0190610cd7565b50978a01979550505091870191600101610c9a565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610c6557878503603f1901845281518051808752610d73818989018a8501610b73565b601f01601f191695909501860194509285019290850190600101610d4c565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610dba57600080fd5b815167ffffffffffffffff80821115610dd257600080fd5b818401915084601f830112610de657600080fd5b815181811115610df857610df8610d92565b604051601f8201601f19908116603f01168101908382118183101715610e2057610e20610d92565b81604052828152876020848701011115610e3957600080fd5b610e4a836020830160208801610b73565b979650505050505050565b81810381811115610e7657634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052600160045260246000fd5b600181811c90821680610ea657607f821691505b602082108103610ec657634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090610eef816004850160208701610b73565b919091016004019392505050565b60008251610f0f818460208701610b73565b9190910192915050565b600060208284031215610f2b57600080fd5b81518015158114610f3b57600080fd5b939250505056fe608060405234801561001057600080fd5b5061017d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80639e0538561461003b578063c0ca164f1461003b575b600080fd5b61004e6100493660046100e0565b610064565b60405161005b91906100f9565b60405180910390f35b60606000821180156100765750606482105b8015610083575081603214155b156100b357505060408051808201909152600f81526e22bc3832b1ba32b210273ab6b132b960891b602082015290565b50506040805180820190915260118152702ab732bc3832b1ba32b210273ab6b132b960791b602082015290565b6000602082840312156100f257600080fd5b5035919050565b600060208083528351808285015260005b818110156101265785810183015185820160400152820161010a565b506000604082860101526040601f19601f830116850101925050509291505056fea2646970667358221220a106d03882f265d2199787ea14615bc28eb8ef7679b72b7df3b0c09cc9ee62a464736f6c63430008150033a2646970667358221220d9336e553e490026b2f4601749cac89d69c3a3222d13d50fc7232a6ee40b5b2864736f6c63430008150033",
    "sourceMap": "119:981:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;332:766;;;:::i;:::-;;252:74;;;:::i;2452:134:6:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3360:151;;;:::i;:::-;;;;;;;:::i;3221:133::-;;;:::i;2922:141::-;;;:::i;2738:178::-;;;:::i;:::-;;;;;;;:::i;2592:140::-;;;:::i;:::-;;;;;;;:::i;3069:146::-;;;:::i;2157:141::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;5592:14:32;;5585:22;5567:41;;5555:2;5540:18;1819:584:0;5427:187:32;2304:142:6;;;:::i;1572:26:0:-;;;;;;;;;332:766:31;380:16;;452:2;529:9;548:16;;:39;;-1:-1:-1;;;548:39:31;;;;;5765:25:32;;;518:20:31;;-1:-1:-1;;;;;;548:16:31;;:27;;5738:18:32;;548:39:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;548:39:31;;;;;;;;;;;;:::i;:::-;;606:9;597:18;-1:-1:-1;625:27:31;655:17;597:18;655:8;:17;:::i;:::-;625:47;;687:42;709:19;687:42;;;;;7295:2:32;7277:21;;;7334:2;7314:18;;;7307:30;-1:-1:-1;;;7368:2:32;7353:18;;7346:40;7453:4;7438:20;;7431:36;;;;7418:3;7403:19;;7065:408;687:42:31;;;;;;;;751:9;770:16;;:40;;-1:-1:-1;;;770:40:31;;;;;5765:25:32;;;740:20:31;;-1:-1:-1;;;;;;770:16:31;;:28;;5738:18:32;;770:40:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;770:40:31;;;;;;;;;;;;:::i;:::-;;829:9;820:18;-1:-1:-1;848:28:31;879:17;820:18;879:8;:17;:::i;:::-;848:48;;911:44;934:20;911:44;;;;;7708:2:32;7690:21;;;7747:2;7727:18;;;7720:30;-1:-1:-1;;;7781:2:32;7766:18;;7759:41;7867:4;7852:20;;7845:36;;;;7832:3;7817:19;;7478:409;911:44:31;;;;;;;;1071:19;1048:20;:42;1041:50;;;;:::i;:::-;370:728;;;;;332:766::o;252:74::-;305:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;286:16:31;:33;;-1:-1:-1;;;;;;286:33:31;-1:-1:-1;;;;;286:33:31;;;;;;;;;;252:74::o;2452:134:6:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:6;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:6;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:6;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;2738:178::-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:140;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2157:141;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;8583:51:32;;;-1:-1:-1;;;8650:18:32;;;8643:34;2196:43:0;;;;;;;;;8556:18:32;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2304:142:6:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:6;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;-1:-1:-1:-;;;;;;;;:::o;14:658:32:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:32;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:32;;14:658;-1:-1:-1;;;;;;14:658:32:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:32;901:16;;894:27;677:250::o;932:1899::-;1136:4;1165:2;1205;1194:9;1190:18;1235:2;1224:9;1217:21;1258:6;1293;1287:13;1324:6;1316;1309:22;1362:2;1351:9;1347:18;1340:25;;1424:2;1414:6;1411:1;1407:14;1396:9;1392:30;1388:39;1374:53;;1462:2;1454:6;1450:15;1483:1;1493:1309;1507:6;1504:1;1501:13;1493:1309;;;-1:-1:-1;;1572:22:32;;;1568:36;1556:49;;1628:13;;1715:9;;-1:-1:-1;;;;;1711:35:32;1696:51;;1786:11;;1780:18;1680:2;1818:15;;;1811:27;;;1899:19;;1668:15;;;1931:24;;;2111:21;;;;1978:2;2064:1;2060:16;;;2048:29;;2044:38;;;2002:15;;;;2156:1;2170:523;2186:8;2181:3;2178:17;2170:523;;;2267:19;;;-1:-1:-1;;2263:33:32;2249:48;;2324:15;;2372:9;;2398:24;;;2439:74;2372:9;2487:15;;;2474:11;;;2439:74;:::i;:::-;2622:17;;;;2583:2;2560:17;-1:-1:-1;;2556:31:32;2544:44;;;;2540:53;;;-1:-1:-1;2665:14:32;;;;2214:1;2205:11;2170:523;;;-1:-1:-1;2716:6:32;;-1:-1:-1;;;2780:12:32;;;;-1:-1:-1;2745:15:32;;;;1529:1;1522:9;1493:1309;;;-1:-1:-1;2819:6:32;;932:1899;-1:-1:-1;;;;;;;932:1899:32:o;2836:1567::-;3038:4;3067:2;3107;3096:9;3092:18;3137:2;3126:9;3119:21;3160:6;3195;3189:13;3226:6;3218;3211:22;3252:2;3242:12;;3285:2;3274:9;3270:18;3263:25;;3347:2;3337:6;3334:1;3330:14;3319:9;3315:30;3311:39;3385:2;3377:6;3373:15;3406:1;3427;3437:937;3453:6;3448:3;3445:15;3437:937;;;3522:22;;;-1:-1:-1;;3518:36:32;3506:49;;3578:13;;3665:9;;-1:-1:-1;;;;;3661:35:32;3646:51;;3736:11;;3730:18;3768:15;;;3761:27;;;3849:19;;3618:15;;;3881:24;;;3971:21;;;;4016:1;;3939:2;3927:15;;;4030:236;4046:8;4041:3;4038:17;4030:236;;;4127:15;;-1:-1:-1;;;;;;4123:42:32;4109:57;;4235:17;;;;4074:1;4065:11;;;;;4192:14;;;;4030:236;;;-1:-1:-1;4352:12:32;;;;4289:5;-1:-1:-1;;;4317:15:32;;;;3479:1;3470:11;3437:937;;;-1:-1:-1;4391:6:32;;2836:1567;-1:-1:-1;;;;;;;;;2836:1567:32:o;4408:1014::-;4570:4;4599:2;4639;4628:9;4624:18;4669:2;4658:9;4651:21;4692:6;4727;4721:13;4758:6;4750;4743:22;4796:2;4785:9;4781:18;4774:25;;4858:2;4848:6;4845:1;4841:14;4830:9;4826:30;4822:39;4808:53;;4896:2;4888:6;4884:15;4917:1;4927:466;4941:6;4938:1;4935:13;4927:466;;;5006:22;;;-1:-1:-1;;5002:36:32;4990:49;;5062:13;;5104:9;;5126:24;;;5163:74;5104:9;5211:15;;;5198:11;;;5163:74;:::i;:::-;5303:2;5280:17;-1:-1:-1;;5276:31:32;5264:44;;;;5260:53;;;-1:-1:-1;5371:12:32;;;;5336:15;;;;4963:1;4956:9;4927:466;;5801:127;5862:10;5857:3;5853:20;5850:1;5843:31;5893:4;5890:1;5883:15;5917:4;5914:1;5907:15;5933:897;6013:6;6066:2;6054:9;6045:7;6041:23;6037:32;6034:52;;;6082:1;6079;6072:12;6034:52;6115:9;6109:16;6144:18;6185:2;6177:6;6174:14;6171:34;;;6201:1;6198;6191:12;6171:34;6239:6;6228:9;6224:22;6214:32;;6284:7;6277:4;6273:2;6269:13;6265:27;6255:55;;6306:1;6303;6296:12;6255:55;6335:2;6329:9;6357:2;6353;6350:10;6347:36;;;6363:18;;:::i;:::-;6438:2;6432:9;6406:2;6492:13;;-1:-1:-1;;6488:22:32;;;6512:2;6484:31;6480:40;6468:53;;;6536:18;;;6556:22;;;6533:46;6530:72;;;6582:18;;:::i;:::-;6622:10;6618:2;6611:22;6657:2;6649:6;6642:18;6697:7;6692:2;6687;6683;6679:11;6675:20;6672:33;6669:53;;;6718:1;6715;6708:12;6669:53;6731:68;6796:2;6791;6783:6;6779:15;6774:2;6770;6766:11;6731:68;:::i;:::-;6818:6;5933:897;-1:-1:-1;;;;;;;5933:897:32:o;6835:225::-;6902:9;;;6923:11;;;6920:134;;;6976:10;6971:3;6967:20;6964:1;6957:31;7011:4;7008:1;7001:15;7039:4;7036:1;7029:15;6920:134;6835:225;;;;:::o;7892:127::-;7953:10;7948:3;7944:20;7941:1;7934:31;7984:4;7981:1;7974:15;8008:4;8005:1;7998:15;8024:380;8103:1;8099:12;;;;8146;;;8167:61;;8221:4;8213:6;8209:17;8199:27;;8167:61;8274:2;8266:6;8263:14;8243:18;8240:38;8237:161;;8320:10;8315:3;8311:20;8308:1;8301:31;8355:4;8352:1;8345:15;8383:4;8380:1;8373:15;8237:161;;8024:380;;;:::o;8688:384::-;-1:-1:-1;;;;;;8873:33:32;;8861:46;;8930:13;;8843:3;;8952:74;8930:13;9015:1;9006:11;;8999:4;8987:17;;8952:74;:::i;:::-;9046:16;;;;9064:1;9042:24;;8688:384;-1:-1:-1;;;8688:384:32:o;9077:287::-;9206:3;9244:6;9238:13;9260:66;9319:6;9314:3;9307:4;9299:6;9295:17;9260:66;:::i;:::-;9342:16;;;;;9077:287;-1:-1:-1;;9077:287:32:o;9369:277::-;9436:6;9489:2;9477:9;9468:7;9464:23;9460:32;9457:52;;;9505:1;9502;9495:12;9457:52;9537:9;9531:16;9590:5;9583:13;9576:21;9569:5;9566:32;9556:60;;9612:1;9609;9602:12;9556:60;9635:5;9369:277;-1:-1:-1;;;9369:277:32:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testGasOptimization()": "00c74a65"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"functionName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"name\":\"GasUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGasOptimization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/NestedIf.t.sol\":\"NestedIfGasTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1\",\"dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08\",\"dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xae16bc69f791ce957604e0e82ee719ffb807f9949a090d98ba6e51efa1412a0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826d95d5f2374c678927260e85245bc3abf5affacb4b95214fb8bf67c214b85\",\"dweb:/ipfs/QmaSqPxNNvgd34HZFgnsmMimWzyVwnBeDWaBiUTnMf4Z5S\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x597ec6514703c8554e1d3d2952e0abdd6020cc133ec9844250ded37dcbb3a1a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b5c70198450103012fd6953d9572a43bae324aaa7c7d028a83693ae1f65a4f9\",\"dweb:/ipfs/QmdLfoAdh3fKiDFt7cT4jD5aQDuYJ95vC8VoiaFn5aTBJG\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"src/NestedIf.sol\":{\"keccak256\":\"0x162e5e4e53b3d06d480fbfa82ab9807713482e1975879d477a5c1a3a3886ccb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://938d38b15be7dbdf328a9a869a91591e592daf591fb7ceb9adb5c975b221f5e6\",\"dweb:/ipfs/QmYJK7LfMXQJx4La4BKMUzFD1XzWDfEAatzbxvm5LtFr9G\"]},\"test/NestedIf.t.sol\":{\"keccak256\":\"0x9138006f73439436efed68d0d9bf44bd89fe1eeff4c94ccf5301ca10f34c407a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc432598469a511b82f6cdd494129179b13ae5d52d7c5d5ea1e60d2725db73a3\",\"dweb:/ipfs/QmcrTvKmoEWsZSnnMozXcAdZomt2ds9sNoGvsiyVeNTWGu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "functionName",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "gasUsed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GasUsed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGasOptimization"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/NestedIf.t.sol": "NestedIfGasTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xdbb593a36db1fde25c398f38312cfedc5b39c4bad1c65c2f58b7515c4dd76be8",
        "urls": [
          "bzz-raw://afc49471af92a1fd12686e2757ad0cbeb5bfe3cc95b8b6b5a5a91af83a8bcfd1",
          "dweb:/ipfs/QmcAQ5WesfLBUChNGuRMGQsDYf44q35Ln7Xb3jmyQgdESU"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xa0bac08b3d12d561fadf74c83c69f3ee54fe40e0c7766611766f6db70c202373",
        "urls": [
          "bzz-raw://292f1e61a3a60f9f4075d0b567f5123d159b0541b7787e4523597ab57331eb08",
          "dweb:/ipfs/QmatxDNPiYVtLap2nn4Hp3AxzkSzkdAQDirbc5QKCDfde5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0xae16bc69f791ce957604e0e82ee719ffb807f9949a090d98ba6e51efa1412a0a",
        "urls": [
          "bzz-raw://0826d95d5f2374c678927260e85245bc3abf5affacb4b95214fb8bf67c214b85",
          "dweb:/ipfs/QmaSqPxNNvgd34HZFgnsmMimWzyVwnBeDWaBiUTnMf4Z5S"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        "urls": [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x597ec6514703c8554e1d3d2952e0abdd6020cc133ec9844250ded37dcbb3a1a9",
        "urls": [
          "bzz-raw://7b5c70198450103012fd6953d9572a43bae324aaa7c7d028a83693ae1f65a4f9",
          "dweb:/ipfs/QmdLfoAdh3fKiDFt7cT4jD5aQDuYJ95vC8VoiaFn5aTBJG"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "src/NestedIf.sol": {
        "keccak256": "0x162e5e4e53b3d06d480fbfa82ab9807713482e1975879d477a5c1a3a3886ccb7",
        "urls": [
          "bzz-raw://938d38b15be7dbdf328a9a869a91591e592daf591fb7ceb9adb5c975b221f5e6",
          "dweb:/ipfs/QmYJK7LfMXQJx4La4BKMUzFD1XzWDfEAatzbxvm5LtFr9G"
        ],
        "license": "MIT"
      },
      "test/NestedIf.t.sol": {
        "keccak256": "0x9138006f73439436efed68d0d9bf44bd89fe1eeff4c94ccf5301ca10f34c407a",
        "urls": [
          "bzz-raw://cc432598469a511b82f6cdd494129179b13ae5d52d7c5d5ea1e60d2725db73a3",
          "dweb:/ipfs/QmcrTvKmoEWsZSnnMozXcAdZomt2ds9sNoGvsiyVeNTWGu"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/NestedIf.t.sol",
    "id": 44320,
    "exportedSymbols": {
      "DSTest": [
        2291
      ],
      "NestedIf": [
        43818
      ],
      "NestedIfGasTest": [
        44319
      ],
      "StdAssertions": [
        3784
      ],
      "StdChains": [
        4522
      ],
      "StdCheats": [
        7375
      ],
      "StdInvariant": [
        7700
      ],
      "StdStorage": [
        8450
      ],
      "StdStyle": [
        11300
      ],
      "StdUtils": [
        12148
      ],
      "Test": [
        12199
      ],
      "TestBase": [
        2357
      ],
      "Vm": [
        13892
      ],
      "console": [
        21956
      ],
      "console2": [
        30081
      ],
      "safeconsole": [
        43319
      ],
      "stdError": [
        7441
      ],
      "stdJson": [
        8276
      ],
      "stdMath": [
        8418
      ],
      "stdStorage": [
        10089
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1069:31",
    "nodes": [
      {
        "id": 44220,
        "nodeType": "PragmaDirective",
        "src": "32:25:31",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 44221,
        "nodeType": "ImportDirective",
        "src": "59:28:31",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44320,
        "sourceUnit": 12200,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44222,
        "nodeType": "ImportDirective",
        "src": "88:29:31",
        "nodes": [],
        "absolutePath": "src/NestedIf.sol",
        "file": "../src/NestedIf.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44320,
        "sourceUnit": 43819,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 44319,
        "nodeType": "ContractDefinition",
        "src": "119:981:31",
        "nodes": [
          {
            "id": 44227,
            "nodeType": "VariableDeclaration",
            "src": "158:25:31",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "nestedIfInstance",
            "nameLocation": "167:16:31",
            "scope": 44319,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NestedIf_$43818",
              "typeString": "contract NestedIf"
            },
            "typeName": {
              "id": 44226,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44225,
                "name": "NestedIf",
                "nameLocations": [
                  "158:8:31"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43818,
                "src": "158:8:31"
              },
              "referencedDeclaration": 43818,
              "src": "158:8:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NestedIf_$43818",
                "typeString": "contract NestedIf"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 44233,
            "nodeType": "EventDefinition",
            "src": "194:52:31",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "443ab68a4cacb08d38c92183e87a41d7056d4e3f5587d896f025fb5026afc096",
            "name": "GasUsed",
            "nameLocation": "200:7:31",
            "parameters": {
              "id": 44232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44229,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "functionName",
                  "nameLocation": "215:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 44233,
                  "src": "208:19:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44228,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "208:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44231,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gasUsed",
                  "nameLocation": "237:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 44233,
                  "src": "229:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "207:38:31"
            }
          },
          {
            "id": 44244,
            "nodeType": "FunctionDefinition",
            "src": "252:74:31",
            "nodes": [],
            "body": {
              "id": 44243,
              "nodeType": "Block",
              "src": "276:50:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44236,
                      "name": "nestedIfInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44227,
                      "src": "286:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NestedIf_$43818",
                        "typeString": "contract NestedIf"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "305:12:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_NestedIf_$43818_$",
                          "typeString": "function () returns (contract NestedIf)"
                        },
                        "typeName": {
                          "id": 44238,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 44237,
                            "name": "NestedIf",
                            "nameLocations": [
                              "309:8:31"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 43818,
                            "src": "309:8:31"
                          },
                          "referencedDeclaration": 43818,
                          "src": "309:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NestedIf_$43818",
                            "typeString": "contract NestedIf"
                          }
                        }
                      },
                      "id": 44240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "305:14:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NestedIf_$43818",
                        "typeString": "contract NestedIf"
                      }
                    },
                    "src": "286:33:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NestedIf_$43818",
                      "typeString": "contract NestedIf"
                    }
                  },
                  "id": 44242,
                  "nodeType": "ExpressionStatement",
                  "src": "286:33:31"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "261:5:31",
            "parameters": {
              "id": 44234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:2:31"
            },
            "returnParameters": {
              "id": 44235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "276:0:31"
            },
            "scope": 44319,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44318,
            "nodeType": "FunctionDefinition",
            "src": "332:766:31",
            "nodes": [],
            "body": {
              "id": 44317,
              "nodeType": "Block",
              "src": "370:728:31",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44248
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44248,
                      "mutability": "mutable",
                      "name": "startGas",
                      "nameLocation": "388:8:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 44317,
                      "src": "380:16:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44247,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "380:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44249,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "380:16:31"
                },
                {
                  "assignments": [
                    44251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44251,
                      "mutability": "mutable",
                      "name": "endGas",
                      "nameLocation": "414:6:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 44317,
                      "src": "406:14:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44250,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "406:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44252,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "406:14:31"
                },
                {
                  "assignments": [
                    44254
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44254,
                      "mutability": "mutable",
                      "name": "testNumber",
                      "nameLocation": "439:10:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 44317,
                      "src": "431:18:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44253,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "431:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44256,
                  "initialValue": {
                    "hexValue": "3235",
                    "id": 44255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "452:2:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_25_by_1",
                      "typeString": "int_const 25"
                    },
                    "value": "25"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "431:23:31"
                },
                {
                  "expression": {
                    "id": 44260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44257,
                      "name": "startGas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44248,
                      "src": "518:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44258,
                        "name": "gasleft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -7,
                        "src": "529:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 44259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "529:9:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "518:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44261,
                  "nodeType": "ExpressionStatement",
                  "src": "518:20:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44265,
                        "name": "testNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44254,
                        "src": "576:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44262,
                        "name": "nestedIfInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44227,
                        "src": "548:16:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NestedIf_$43818",
                          "typeString": "contract NestedIf"
                        }
                      },
                      "id": 44264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "565:10:31",
                      "memberName": "badNesting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43791,
                      "src": "548:27:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) pure external returns (string memory)"
                      }
                    },
                    "id": 44266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "548:39:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 44267,
                  "nodeType": "ExpressionStatement",
                  "src": "548:39:31"
                },
                {
                  "expression": {
                    "id": 44271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44268,
                      "name": "endGas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44251,
                      "src": "597:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44269,
                        "name": "gasleft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -7,
                        "src": "606:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 44270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "606:9:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "597:18:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44272,
                  "nodeType": "ExpressionStatement",
                  "src": "597:18:31"
                },
                {
                  "assignments": [
                    44274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44274,
                      "mutability": "mutable",
                      "name": "gasUsedByBadNesting",
                      "nameLocation": "633:19:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 44317,
                      "src": "625:27:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44273,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "625:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44278,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44275,
                      "name": "startGas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44248,
                      "src": "655:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 44276,
                      "name": "endGas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44251,
                      "src": "666:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "655:17:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "625:47:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "6261644e657374696e67",
                        "id": 44280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "695:12:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9978bc4453cceb548378be46fac4efccd25c68baa9dd683c8505ddfbace71bf",
                          "typeString": "literal_string \"badNesting\""
                        },
                        "value": "badNesting"
                      },
                      {
                        "id": 44281,
                        "name": "gasUsedByBadNesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44274,
                        "src": "709:19:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c9978bc4453cceb548378be46fac4efccd25c68baa9dd683c8505ddfbace71bf",
                          "typeString": "literal_string \"badNesting\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44279,
                      "name": "GasUsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44233,
                      "src": "687:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 44282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "687:42:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44283,
                  "nodeType": "EmitStatement",
                  "src": "682:47:31"
                },
                {
                  "expression": {
                    "id": 44287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44284,
                      "name": "startGas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44248,
                      "src": "740:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44285,
                        "name": "gasleft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -7,
                        "src": "751:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 44286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "751:9:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "740:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44288,
                  "nodeType": "ExpressionStatement",
                  "src": "740:20:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44292,
                        "name": "testNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44254,
                        "src": "799:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 44289,
                        "name": "nestedIfInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44227,
                        "src": "770:16:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NestedIf_$43818",
                          "typeString": "contract NestedIf"
                        }
                      },
                      "id": 44291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "787:11:31",
                      "memberName": "goodNesting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43817,
                      "src": "770:28:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) pure external returns (string memory)"
                      }
                    },
                    "id": 44293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "770:40:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 44294,
                  "nodeType": "ExpressionStatement",
                  "src": "770:40:31"
                },
                {
                  "expression": {
                    "id": 44298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44295,
                      "name": "endGas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44251,
                      "src": "820:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 44296,
                        "name": "gasleft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -7,
                        "src": "829:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 44297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "829:9:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "820:18:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44299,
                  "nodeType": "ExpressionStatement",
                  "src": "820:18:31"
                },
                {
                  "assignments": [
                    44301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44301,
                      "mutability": "mutable",
                      "name": "gasUsedByGoodNesting",
                      "nameLocation": "856:20:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 44317,
                      "src": "848:28:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 44300,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "848:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44305,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 44304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 44302,
                      "name": "startGas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44248,
                      "src": "879:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 44303,
                      "name": "endGas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44251,
                      "src": "890:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "879:17:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "848:48:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "676f6f644e657374696e67",
                        "id": 44307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "919:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_526c57d2ba5a2d423a2516a644c3a7505df3e5ed722a7db142c15a5fe3d4d96b",
                          "typeString": "literal_string \"goodNesting\""
                        },
                        "value": "goodNesting"
                      },
                      {
                        "id": 44308,
                        "name": "gasUsedByGoodNesting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44301,
                        "src": "934:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_526c57d2ba5a2d423a2516a644c3a7505df3e5ed722a7db142c15a5fe3d4d96b",
                          "typeString": "literal_string \"goodNesting\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44306,
                      "name": "GasUsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44233,
                      "src": "911:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 44309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "911:44:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44310,
                  "nodeType": "EmitStatement",
                  "src": "906:49:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44312,
                          "name": "gasUsedByGoodNesting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44301,
                          "src": "1048:20:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 44313,
                          "name": "gasUsedByBadNesting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44274,
                          "src": "1071:19:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1048:42:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 44311,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1041:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 44315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1041:50:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44316,
                  "nodeType": "ExpressionStatement",
                  "src": "1041:50:31"
                }
              ]
            },
            "functionSelector": "00c74a65",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGasOptimization",
            "nameLocation": "341:19:31",
            "parameters": {
              "id": 44245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "360:2:31"
            },
            "returnParameters": {
              "id": 44246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "370:0:31"
            },
            "scope": 44319,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44223,
              "name": "Test",
              "nameLocations": [
                "147:4:31"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12199,
              "src": "147:4:31"
            },
            "id": 44224,
            "nodeType": "InheritanceSpecifier",
            "src": "147:4:31"
          }
        ],
        "canonicalName": "NestedIfGasTest",
        "contractDependencies": [
          43818
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44319,
          12199,
          12148,
          7700,
          7375,
          6582,
          4522,
          3784,
          2291,
          2357,
          2354
        ],
        "name": "NestedIfGasTest",
        "nameLocation": "128:15:31",
        "scope": 44320,
        "usedErrors": [],
        "usedEvents": [
          5,
          9,
          13,
          17,
          21,
          25,
          29,
          33,
          39,
          45,
          53,
          61,
          67,
          73,
          79,
          85,
          2379,
          2384,
          2389,
          2396,
          2403,
          2410,
          44233
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 31
}